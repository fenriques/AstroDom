name: release-dist
on:
  push:
    tags: ["v*"]

jobs:
  create-release-assets:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
      - name: Checkout commit
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with: {python-version: "3.12"}

      - name: Install this project
        run: |
          pip install -U pip setuptools
          pip install .

      - name: Create a native binary
        run: make binary

      - name: Try running the binary
        run: ./dist/astrodom

      - name: Upload binary artifact as a zip
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: dist


  create-release:
    runs-on: ubuntu-latest
    needs: create-release-assets
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2

      - name: Create a GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}

      - name: Upload linux binary to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ubuntu-latest/py-demo
          asset_name: py-demo-Linux-x86_64
          asset_content_type: application/x-executable

      - name: Upload macOS binary to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macOS-latest/py-demo
          asset_name: py-demo-Darwin-x86_64
          asset_content_type: application/x-mach-binary