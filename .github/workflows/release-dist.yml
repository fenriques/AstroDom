name: release-dist
on:
  push:
    tags:
      - 'v*'  # Trigger release when a new tag is pushed

jobs:
  release:
    name: Release - ${{ matrix.platform.release_for }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - release_for: Linux-x86_64
            os: ubuntu-latest
            pyinstaller_target: linux
            bin: astrodom
            name: astrodom-linux-amd64

          - release_for: Windows-x86_64
            os: windows-latest
            pyinstaller_target: windows
            bin: astrodom.exe
            name: astrodom-windows-amd64.exe

          - release_for: macOS-x86_64
            os: macos-latest
            pyinstaller_target: macos
            bin: astrodom
            name: astrodom-macos-amd64

    steps:
      - uses: actions/checkout@v2  # Checkout code

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  # Set up the Python environment

      - name: Install PyInstaller
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller  # Install PyInstaller for packaging

      - name: Build Executable
        run: |
          # Build the executable with PyInstaller for each platform (adjusting accordingly)
          pyinstaller astrodom.spec

      - name: Prepare assets
        shell: bash
        run: |
          # Prepare the release folder
          mkdir -p release

          # Move the binary from PyInstaller dist directory to release folder
          cp -r dist/astrodom* release/${{ matrix.platform.name }}

      - name: Delete Existing Release
        if: always()
        run: |
          gh release delete ${{ github.ref }} -y || true
          gh api -X DELETE /repos/${{ github.repository }}/git/refs/tags/${{ github.ref }} || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/astrodom
          asset_name: astrodom-${{ matrix.os }}
          asset_content_type: application/octet-stream